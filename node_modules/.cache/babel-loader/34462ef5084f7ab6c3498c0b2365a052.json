{"ast":null,"code":"import { useState } from \"react\";\n\nfunction Signup(_ref) {// const [formData,setFormData] = useState({\n  //     username:'',\n  //     password: ''\n  // })\n  // const [errors, setErrors] = useState([])\n  // const {username, password} = formData\n  // const onSubmit = (e)=>{\n  //     e.preventDefault()\n  // }\n  // fetch('http://localhost:3000/users',{\n  //     method: 'POST',\n  //     headers: {\n  //         'Content-type': 'application/json'\n  //     },\n  //     body:JSON.stringify(user)\n  //     })\n  //     .then(res => {\n  //         if(res.ok){\n  //             res.json().then(user =>{\n  //                 updateUser(user)\n  //             })\n  //         }else{\n  //             res.json().then(json => setErrors(Object.entries(json.errors)))\n  //         }\n  //     })\n  //     const handleChange = (e)=>{\n  //         const{name,value } = e.target\n  //         setFormData({...formData, [name]: value})\n  //     }\n  //     return(\n  //     //     <form className=\"form\" onSubmit={handleSubmit}>\n  //     //   <label htmlFor=\"username\">Username:</label>\n  //   <input\n  //     type=\"text\"\n  //     id=\"username\"\n  //     value={username}\n  //     onChange={(e) => setUsername(e.target.value)}\n  //   />\n  //   <label htmlFor=\"password\">Password:</label>\n  //   <input\n  //     type=\"password\"\n  //     id=\"password\"\n  //     value={password}\n  //     onChange={(e) => setPassword(e.target.value)}\n  //   />\n  //   <label htmlFor=\"password_confirmation\">Confirm Password:</label>\n  //   <input\n  //     type=\"password\"\n  //     id=\"password_confirmation\"\n  //     value={passwordConfirmation}\n  //     onChange={(e) => setPasswordConfirmation(e.target.value)}\n  //   />\n  //   <button className=\"button\" type=\"submit\">Submit</button>\n  // </form>\n\n  let {\n    updateUser\n  } = _ref;\n}\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","Signup","updateUser"],"sources":["/home/iholleratme/Development/code/phase-5/capstone/src/components/Signup.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Signup({updateUser}){\n\n\n\n// const [formData,setFormData] = useState({\n//     username:'',\n//     password: ''\n// })\n\n// const [errors, setErrors] = useState([])\n\n\n// const {username, password} = formData\n\n\n// const onSubmit = (e)=>{\n//     e.preventDefault()\n\n// }\n// fetch('http://localhost:3000/users',{\n//     method: 'POST',\n//     headers: {\n//         'Content-type': 'application/json'\n//     },\n//     body:JSON.stringify(user)\n//     })\n//     .then(res => {\n//         if(res.ok){\n//             res.json().then(user =>{\n//                 updateUser(user)\n//             })\n//         }else{\n//             res.json().then(json => setErrors(Object.entries(json.errors)))\n//         }\n//     })\n\n\n//     const handleChange = (e)=>{\n//         const{name,value } = e.target\n//         setFormData({...formData, [name]: value})\n//     }\n//     return(\n//     //     <form className=\"form\" onSubmit={handleSubmit}>\n//     //   <label htmlFor=\"username\">Username:</label>\n    //   <input\n    //     type=\"text\"\n    //     id=\"username\"\n    //     value={username}\n    //     onChange={(e) => setUsername(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password\">Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password\"\n    //     value={password}\n    //     onChange={(e) => setPassword(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password_confirmation\">Confirm Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password_confirmation\"\n    //     value={passwordConfirmation}\n    //     onChange={(e) => setPasswordConfirmation(e.target.value)}\n    //   />\n    //   <button className=\"button\" type=\"submit\">Submit</button>\n    // </form>\n    \n}\n\nexport default Signup;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,MAAT,OAA6B,CAI7B;EACA;EACA;EACA;EAEA;EAGA;EAGA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAjEyB,IAAb;IAACC;EAAD,CAAa;AAmE5B;;KAnEQD,M;AAqET,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}