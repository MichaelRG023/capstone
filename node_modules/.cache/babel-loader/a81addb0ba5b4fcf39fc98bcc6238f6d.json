{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(_ref) {\n  _s();\n\n  let {\n    updateUser\n  } = _ref;\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const {\n    username,\n    password\n  } = formData;\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  fetch('http://localhost:3000/users', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(user => {\n        updateUser(user);\n      });\n    } else {\n      res.json().then(json => setErrors(Object.entries(json.errors)));\n    }\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //     <form className=\"form\" onSubmit={handleSubmit}>\n    //   <label htmlFor=\"username\">Username:</label>\n    //   <input\n    //     type=\"text\"\n    //     id=\"username\"\n    //     value={username}\n    //     onChange={(e) => setUsername(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password\">Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password\"\n    //     value={password}\n    //     onChange={(e) => setPassword(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password_confirmation\">Confirm Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password_confirmation\"\n    //     value={passwordConfirmation}\n    //     onChange={(e) => setPasswordConfirmation(e.target.value)}\n    //   />\n    //   <button className=\"button\" type=\"submit\">Submit</button>\n    // </form>\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n}\n\n_s(Signup, \"UWy6/zOCf1eEK9kL3W3Q5BvbUF0=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","Signup","updateUser","formData","setFormData","username","password","errors","setErrors","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","user","then","res","ok","json","Object","entries","handleChange","name","value","target"],"sources":["/home/iholleratme/Development/code/phase-5/capstone/src/components/Signup.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Signup({updateUser}){\n\n\n\nconst [formData,setFormData] = useState({\n    username:'',\n    password: ''\n})\n\nconst [errors, setErrors] = useState([])\n\n\nconst {username, password} = formData\n\n\nconst onSubmit = (e)=>{\n    e.preventDefault()\n\n}\nfetch('http://localhost:3000/users',{\n    method: 'POST',\n    headers: {\n        'Content-type': 'application/json'\n    },\n    body:JSON.stringify(user)\n    })\n    .then(res => {\n        if(res.ok){\n            res.json().then(user =>{\n                updateUser(user)\n            })\n        }else{\n            res.json().then(json => setErrors(Object.entries(json.errors)))\n        }\n    })\n\n\n    const handleChange = (e)=>{\n        const{name,value } = e.target\n        setFormData({...formData, [name]: value})\n    }\n    return(\n    //     <form className=\"form\" onSubmit={handleSubmit}>\n    //   <label htmlFor=\"username\">Username:</label>\n    //   <input\n    //     type=\"text\"\n    //     id=\"username\"\n    //     value={username}\n    //     onChange={(e) => setUsername(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password\">Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password\"\n    //     value={password}\n    //     onChange={(e) => setPassword(e.target.value)}\n    //   />\n    //   <label htmlFor=\"password_confirmation\">Confirm Password:</label>\n    //   <input\n    //     type=\"password\"\n    //     id=\"password_confirmation\"\n    //     value={passwordConfirmation}\n    //     onChange={(e) => setPasswordConfirmation(e.target.value)}\n    //   />\n    //   <button className=\"button\" type=\"submit\">Submit</button>\n    // </form>\n    <></>\n    )\n}\n\nexport default Signup;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,MAAT,OAA6B;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EAI7B,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBJ,QAAQ,CAAC;IACpCK,QAAQ,EAAC,EAD2B;IAEpCC,QAAQ,EAAE;EAF0B,CAAD,CAAvC;EAKA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EAGA,MAAM;IAACK,QAAD;IAAWC;EAAX,IAAuBH,QAA7B;;EAGA,MAAMM,QAAQ,GAAIC,CAAD,IAAK;IAClBA,CAAC,CAACC,cAAF;EAEH,CAHD;;EAIAC,KAAK,CAAC,6BAAD,EAA+B;IAChCC,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFuB;IAKhCC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeC,IAAf;EAL2B,CAA/B,CAAL,CAOKC,IAPL,CAOUC,GAAG,IAAI;IACT,IAAGA,GAAG,CAACC,EAAP,EAAU;MACND,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBD,IAAI,IAAG;QACnBhB,UAAU,CAACgB,IAAD,CAAV;MACH,CAFD;IAGH,CAJD,MAIK;MACDE,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBG,IAAI,IAAId,SAAS,CAACe,MAAM,CAACC,OAAP,CAAeF,IAAI,CAACf,MAApB,CAAD,CAAjC;IACH;EACJ,CAfL;;EAkBI,MAAMkB,YAAY,GAAIf,CAAD,IAAK;IACtB,MAAK;MAACgB,IAAD;MAAMC;IAAN,IAAgBjB,CAAC,CAACkB,MAAvB;IACAxB,WAAW,CAAC,EAAC,GAAGD,QAAJ;MAAc,CAACuB,IAAD,GAAQC;IAAtB,CAAD,CAAX;EACH,CAHD;;EAIA;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAzBA;AA2BH;;GApEQ1B,M;;KAAAA,M;AAsET,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}